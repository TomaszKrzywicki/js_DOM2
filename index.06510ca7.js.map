{"mappings":"ACGA,IAAM,EAAkB,SAAS,aAAa,CAAC,4BAG/C,SAAS,EAAiB,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,AACjC,CAAA,EAAgB,WAAW,CAAG,EAC9B,EAAgB,SAAS,CAAG,EAAU,QAAU,UAChD,EAAgB,KAAK,CAAC,OAAO,CAAG,QAGhC,WAAW,WACT,EAAgB,KAAK,CAAC,OAAO,CAAG,MAClC,EAAG,IACL,CAyBA,AAtBqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAY,CAAA,EAEV,EAAe,WACd,IACH,EAAY,CAAA,EACZ,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACJ,IACH,EAAY,CAAA,EACZ,EAAO,AAAI,MAAM,+BACjB,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAiB,EACnC,GAAA,KAAK,CAAC,SAAC,CAAP,EAAiB,OAAA,EAAiB,EAAM,OAAO,CAAE,CAAA,E,GAgBpD,AAbsB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAe,SAAC,CAAtB,EACM,CAAA,AAAa,IAAb,EAAE,MAAM,EAAU,AAAa,IAAb,EAAE,MAAM,AAAK,IAEjC,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAEA,SAAS,gBAAgB,CAAC,QAAS,EACrC,GAGc,IAAI,CAAC,SAAC,CAApB,EAAgC,OAAA,EAAiB,E,GA0BjD,AAvBqB,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EAEb,EAAe,SAAC,CAAtB,EACM,AAAa,IAAb,EAAE,MAAM,CAEV,EAAc,CAAA,EACQ,IAAb,EAAE,MAAM,EAEjB,CAAA,EAAe,CAAA,CAAf,EAGE,GAAe,IACjB,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAEA,SAAS,gBAAgB,CAAC,QAAS,EACrC,GAGa,IAAI,CAAC,SAAC,CAAnB,EAA+B,OAAA,EAAiB,E,GAGhD,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,EAClB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Select the notification div\nvar notificationDiv = document.querySelector('[data-qa=\"notification\"]');\n// Helper function to display messages\nfunction showNotification(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    notificationDiv.textContent = message;\n    notificationDiv.className = isError ? \"error\" : \"success\";\n    notificationDiv.style.display = \"block\";\n    // Hide the notification after 3 seconds\n    setTimeout(function() {\n        notificationDiv.style.display = \"none\";\n    }, 3000);\n}\n// First Promise\nvar firstPromise = new Promise(function(resolve, reject) {\n    var isHandled = false; // Flag to ensure only one handler is executed\n    var clickHandler = function() {\n        if (!isHandled) {\n            isHandled = true;\n            resolve(\"First promise was resolved\");\n            document.removeEventListener(\"click\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n    setTimeout(function() {\n        if (!isHandled) {\n            isHandled = true;\n            reject(new Error(\"First promise was rejected\"));\n            document.removeEventListener(\"click\", clickHandler);\n        }\n    }, 3000);\n});\nfirstPromise.then(function(message) {\n    return showNotification(message);\n}).catch(function(error) {\n    return showNotification(error.message, true);\n});\n// Second Promise\nvar secondPromise = new Promise(function(resolve) {\n    var clickHandler = function(e) {\n        if (e.button === 0 || e.button === 2) {\n            // Left or Right click\n            resolve(\"Second promise was resolved\");\n            document.removeEventListener(\"click\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n});\n// Handle second promise\nsecondPromise.then(function(message) {\n    return showNotification(message);\n});\n// Third Promise\nvar thirdPromise = new Promise(function(resolve) {\n    var leftClicked = false;\n    var rightClicked = false;\n    var clickHandler = function(e) {\n        if (e.button === 0) // Left click\n        leftClicked = true;\n        else if (e.button === 2) // Right click\n        rightClicked = true;\n        if (leftClicked && rightClicked) {\n            resolve(\"Third promise was resolved\");\n            document.removeEventListener(\"click\", clickHandler);\n        }\n    };\n    document.addEventListener(\"click\", clickHandler);\n});\n// Handle third promise\nthirdPromise.then(function(message) {\n    return showNotification(message);\n});\n// Prevent context menu on right-click\ndocument.addEventListener(\"contextmenu\", function(e) {\n    e.preventDefault();\n});\n\n//# sourceMappingURL=index.06510ca7.js.map\n","'use strict';\n\n// Select the notification div\nconst notificationDiv = document.querySelector('[data-qa=\"notification\"]');\n\n// Helper function to display messages\nfunction showNotification(message, isError = false) {\n  notificationDiv.textContent = message;\n  notificationDiv.className = isError ? 'error' : 'success';\n  notificationDiv.style.display = 'block';\n\n  // Hide the notification after 3 seconds\n  setTimeout(() => {\n    notificationDiv.style.display = 'none';\n  }, 3000);\n}\n\n// First Promise\nconst firstPromise = new Promise((resolve, reject) => {\n  let isHandled = false; // Flag to ensure only one handler is executed\n\n  const clickHandler = () => {\n    if (!isHandled) {\n      isHandled = true;\n      resolve('First promise was resolved');\n      document.removeEventListener('click', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n\n  setTimeout(() => {\n    if (!isHandled) {\n      isHandled = true;\n      reject(new Error('First promise was rejected'));\n      document.removeEventListener('click', clickHandler);\n    }\n  }, 3000);\n});\n\nfirstPromise\n  .then((message) => showNotification(message))\n  .catch((error) => showNotification(error.message, true));\n\n// Second Promise\nconst secondPromise = new Promise((resolve) => {\n  const clickHandler = (e) => {\n    if (e.button === 0 || e.button === 2) {\n      // Left or Right click\n      resolve('Second promise was resolved');\n      document.removeEventListener('click', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n});\n\n// Handle second promise\nsecondPromise.then((message) => showNotification(message));\n\n// Third Promise\nconst thirdPromise = new Promise((resolve) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  const clickHandler = (e) => {\n    if (e.button === 0) {\n      // Left click\n      leftClicked = true;\n    } else if (e.button === 2) {\n      // Right click\n      rightClicked = true;\n    }\n\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n      document.removeEventListener('click', clickHandler);\n    }\n  };\n\n  document.addEventListener('click', clickHandler);\n});\n\n// Handle third promise\nthirdPromise.then((message) => showNotification(message));\n\n// Prevent context menu on right-click\ndocument.addEventListener('contextmenu', (e) => {\n  e.preventDefault();\n});\n"],"names":["notificationDiv","document","querySelector","showNotification","message","isError","arguments","length","textContent","className","style","display","setTimeout","firstPromise","Promise","resolve","reject","isHandled","clickHandler","removeEventListener","addEventListener","Error","then","catch","error","secondPromise","e","button","thirdPromise","leftClicked","rightClicked","preventDefault"],"version":3,"file":"index.06510ca7.js.map"}